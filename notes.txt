- Read in a text file and output the contents to the terminal - done
- Extract text from a png file, and output that text to the terminal 
- Build a web server to return hello world from / route
- Get the server to take in a text file contents, and return the text in a response
- Take in a png file contents, extract text, return it as a response
- Recieve a GRPC basic request and send basic response
- Take in a text file contents via GRPC, send back the text
- Take in png file contents via GRPC, extract text and send back the text

OCR

"gosseract" package which is a wrapper around tesseract C++ lib
- Install on windows: https://github.com/UB-Mannheim/tesseract/wiki
- Add it to path (system env variable)
- Verify it works on command line `tesseract {infile} {outfile}`
- Install the go wrapper `go get github.com/otiai10/gosseract`

Error:
tessbridge.cpp:5:10: fatal error: tesseract/baseapi.h: No such file or directory
https://github.com/otiai10/gosseract/issues/132
https://tesseract-ocr.github.io/tessdoc/Compiling.html

With Docker
- Install WSL
- Install docker
- Copy the Dockerfile contents from the gosseract one, into my own Dockerfile in my project, just editing the last line. https://github.com/otiai10/gosseract/blob/main/Dockerfile

- Docker build: `docker build -t jamie/go-ocr:1.0 .`
t is for tag, . is for the current dir

- Docker run: `docker run 5309bfe795d3`
3rd arg is the image id (can get from `docker images`)

- Port forwarding: `docker run -p 5000:3000 5309bfe795d3
{port on local}:{port on docker container}

- Mounting: `docker run -p 5000:3000 -v C:\Users\j_bow\coding\go\ocr:/app 850309022eb3`

`docker run -p 8080:8080 -v C:\\Users\\j_bow\\coding\\go\\ocr:/app d8b1d5cedf6c`

When changing a file, air did not hot reload it. This was because I was editing the file in windows file system, not in the mnt of wsl.
The solution was to open the project dir in vscode with remote explorer, in wsl.

Then after doing that, I got the following error with the air build:
error obtaining VCS status: exit status 128
        Use -buildvcs=false to disable VCS stamping.
failed to build, error: exit status 1

This was due to there being no git directory in the wsl mount of the project. So I fixed this by adding `-buildvcs=false` to the .air.toml file.
So the build cmd looked like this: cmd = "go build -o ./tmp/main.exe -buildvcs=false ."

`docker build -t jamie/go-ocr:1.0 .`
`docker images` - to get image id
`docker run -p 8080:8080 -v /home/jbower/projects/go/ocr:/app {image id}`

Install Go in WSL:
- `wget https://dl.google.com/go/go1.22.5.linux-amd64.tar.gz`
- `sudo rm -rf /usr/local/go && sudo tar -C /usr/local -xzf go1.22.5.linux-amd64.tar.gz`
- `export PATH=$PATH:/usr/local/go/bin`
- Install go extension in wsl in vscode